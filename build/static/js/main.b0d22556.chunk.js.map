{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeHolder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","runtime","NotFound","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0d22556.chunk.js","sourcesContent":["import React from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'; \r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                <img className=\"rmdb-logo\" src=\"./images/movie_Logo.jpg\" alt=\"rmdb-logo\" />\r\n                </Link>\r\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header; ","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2cf9bf8394774e0f72094144db64423e';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react'; \r\nimport './HeroImage.css'; \r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n        //in-line style has double curly braces\r\n        //one for entering javascript, one for the style object\r\n            style={{\r\n                background:\r\n                `linear-gradient(to bottom, rgba(0, 0, 0, 0)\r\n                39%, rgba(0, 0, 0, 0)\r\n                41%, rgba(0, 0, 0, 0.65)\r\n                100%),\r\n                url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-Content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>  \r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage; ","import React, {Component} from 'react'; \r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css'; \r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    /* I need to look more into how and why this Time Out event works\r\n    I know it waits half a second before firing off the onChange event, but how and why? */ \r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout( () => {\r\n            this.props.callback(this.state.value)\r\n        }, 500); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeHolder=\"search\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}\r\n                        />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map( (element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements; \r\n    } \r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {/* Ternary operator checks to see if a header exists and is not loading\r\n                if so, an H1 with the header appears, if not it returns null */}\r\n            {props.header && !props.loading ? <h1> {props.header} </h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid; ","import React from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return(\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ?\r\n            <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n                </Link>\r\n                :\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n            }\r\n        </div>\r\n        )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;\r\n","import React from 'react'; \r\nimport './LoadMoreBtn.css'; \r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn","import React from 'react'; \r\nimport './Spinner.css'; \r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner; ","import React, { Component } from 'react'; \r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage'; \r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css'; \r\n\r\nclass Home extends Component {\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false, \r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('HomeState')) {\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({ ...state });\r\n        } else {\r\n        this.setState({ loading: true });\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        this.fetchItems(endpoint);\r\n        }\r\n    }\r\n\r\n    searchItems = (searchTerm) => {\r\n        console.log(searchTerm);\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true, \r\n            searchTerm: searchTerm\r\n        })\r\n\r\n        if (searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true });\r\n\r\n        if (this.state.searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        }\r\n        else {\r\n            endpoint = `${API_URL}search/movie/?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage +1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            this.setState({\r\n              movies: [...this.state.movies, ...result.results] ,\r\n              heroImage: this.state.heroImage || result.results[0],\r\n              loading: false,\r\n              currentPage: result.page,\r\n              totalPages: result.total_pages\r\n            }, () => {\r\n                localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n            })\r\n        })\r\n        .catch(error => console.error(\"Error:\", error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n\r\n            {/*This ternary operator checks to see if there is a hero image in state\r\n                if there is, it renders it here in these divs, if not it remains null */}\r\n                {this.state.heroImage ?\r\n                <div>\r\n                    <HeroImage \r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                        title={this.state.heroImage.original_title}\r\n                        text={this.state.heroImage.overview}\r\n                   />\r\n                    <SearchBar callback={this.searchItems}/>\r\n                </div> : null}\r\n                {/* end ternary operator */}\r\n\r\n                <div className=\"rmdb-home-grid\">\r\n                    <FourColGrid\r\n                        header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                        loading={this.state.loading}\r\n                        >\r\n                        {this.state.movies.map( (element, i) => {\r\n                            return <MovieThumb\r\n                                    key={i}\r\n                                    clickable={true}\r\n                                    image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                    movieId={element.id}\r\n                                    movieName={element.original_title}\r\n                                />\r\n                         })}\r\n                        </FourColGrid>\r\n                        {this.state.loading ? <Spinner /> : null}\r\n                        {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n                            : null }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home; \r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p></p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation; ","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n            }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                    clickable={false}\r\n                    />\r\n                    </div>\r\n                    <div className=\"rmdb-movieinfo-text\">\r\n                        <h1>{props.movie.title}</h1>\r\n                        <h3>PLOT:</h3>\r\n                        <p>{props.movie.overview}</p>\r\n                        <h3>IMDB RATING:</h3>\r\n                        <div className=\"rmdb-rating\">\r\n                            <meter min='0' max='100' optimum='100' low='40' high='70' value={props.movie.vote_average * 10}></meter>\r\n                            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                        </div>\r\n                        {props.directors.length > 1 ? <h3>DIRECTORS:</h3> : <h3>DIRECTOR</h3>}\r\n                        {props.directors.map( (element, i) => {\r\n                            return <p key={1} className=\"rmdb-director\">{element.name}</p>\r\n                        })}\r\n                    </div>\r\n                    <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome'; \r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-0\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>    \r\n                </div> \r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar; ","import React from 'react'; \r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n\r\n    const POSTER_SIZE = \"w154\"\r\n\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\"\r\n                />\r\n                <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n                <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;   ","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation'\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.js';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n            this.setState({ ...state })\r\n        } else {\r\n            this.setState({ loading: true })\r\n            // first fetch the movie\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`\r\n            this.fetchItems(endpoint);\r\n        }\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                console.log(this.state.movie);\r\n                if (result.status_code) {\r\n                    // If we don't find any movie\r\n                    this.setState({ loading: false });\r\n                } else {\r\n                    this.setState({ movie: result }, () => {\r\n                        // ...then fetch actors in the setState callback function\r\n                        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\r\n                        fetch(endpoint)\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                const directors = result.crew.filter((member) => member.job === 'Director');\r\n\r\n                                this.setState({\r\n                                    actors: result.cast,\r\n                                    directors: directors,\r\n                                    loading: false\r\n                                }, () => {\r\n                                    localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state))\r\n                                })\r\n                            })\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                    : null}\r\n                {this.state.actors ?\r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'} >\r\n\r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div>\r\n                    : null}\r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found</h1> : null}\r\n                {this.state.loading ? <Spinner /> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;\r\n\r\n","import React from 'react'; \r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Whooooops. This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from \"../elements/NotFound/NotFound\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App; ","import React from 'react'; \nimport ReactDOM from 'react-dom'; \nimport App from './components/App/App'; \nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}